# -*- coding: utf-8 -*-
"""07_OCT_2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OrocKxkMrmXz8VV1NlXZjYJjbBDB0uR0

1. WAP that you are in the team of 11 players find your name in that list using operators.
"""

def team(target):
  players = []
  for i in range(11):
    member = input(f"Enter member {i+1} name of the team: ")
    players.append(member)
  if target in players:
    print("Match found.")
  else:
    print("Match not found.")

team("vkt")

"""2.WAP to create a list dynamically of n elemnts."""

def create_list(n):
  lst = []
  for i in range(n):
    a = input(f"Enter element {i+1}: ")
    lst.append(a)
  print(lst)

create_list(5)

"""3.WAP a 2D list for students roll_no and marks."""

def create_2d_list(num_students):
  student_data = []
  for i in range(num_students):
    roll_no = input(f"Enter roll number for student {i+1}: ")
    marks = input(f"Enter marks for student {i+1}: ")
    student_data.append([roll_no,marks])
  return student_data

num_students = int(input("Enter the number of students: "))
student_list = create_2d_list(num_students)
print(student_list)

"""4.WAP to get entered name of students of a class by user inut"""

def get_students_names(num_students):
  student_names = []
  for i in range(num_students):
    name = input(f"Enter the name of student (i+1: )")
    student_names.append(name)
  return student_names

num_students = int(input("Enter the number of students in the class: "))
student_list = get_students_names(num_students)
print("Student names entered:")
for name in student_list:
  print(name)

"""5. How to create a unit matrix in python.

"""

def unit_matrix(n):
  unit = [[]]
  unit = [[0 for j in range(n)] for i in range(n)]
  for i in range(n):
    unit[i][i] = 1

  return unit
print(unit_matrix(5))

"""6.. WAP to find sum of two matrix and place in third matix."""

def sum_of_two_matrix(matrix1,matrix2):
  sum_matrix = []
  for i in range(len(matrix1)):
    sum_matrix.append([])
    for j in range(len(matrix1[0])):
      sum_matrix[i].append(matrix1[i][j]+matrix2[i][j])
  return sum_matrix
matrix1 = [[1,2],[3,4]]
matrix2 = [[5,6],[7,8]]
print(sum_of_two_matrix(matrix1,matrix2))

"""7. WAP to find multiplication of two matrix and place in third matix."""

def muliply_matrices(matrix1,matrix2):
  if len(matrix1[0]) != len(matrix2):
    return "Matrix multiplication is not possible."
  # Initialize the result matrix with zeros
  mul_matrix = [[0 for _ in range(len(matrix2[0]))] for _ in range(len(matrix1))]
  for i in range(len(matrix1)):
    for j in range(len(matrix2[0])):
      for k in range(len(matrix2)):
        mul_matrix[i][j] += matrix1[i][k] * matrix2[k][j]
  return mul_matrix
matrix1 = [[1,2],[3,4]]
matrix2 = [[5,6],[7,8]]
print(muliply_matrices(matrix1,matrix2))



